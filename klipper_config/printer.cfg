[include kiauh_macros.cfg]
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

[pause_resume]

[save_variables]
filename: /tmp/klipper_bed_mesh.cfg ; variable storage file

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    G1 X10 Y10 F6000
    G1 Z+20 F480
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[display_status]

[virtual_sdcard]
path: ~/gcode_files

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(40)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    M104 S{EXTRUDER_TEMP} ; start heating extruder
    M190 S{BED_TEMP} ; wait for bed temperature
    G29 ; G28 here inside

[gcode_macro END_PRINT]
gcode:
    G91 ; Relative positioning
    G1 E-2 F1800 ; Retract
    G1 F3000 Z3 ; Move up
    G90 ; Absolute pos.
    G1 X0 Y200; present print
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # SAVE_IF_SET     ; SAVE_CONFIG if a mesh was probed in START_PRINT
    M84 ; Disable steppers

; This is where the magic happens:
; MAX_AGE is checked against the stored variable
; SAVE=1 can be used to force saving the mesh (restarts klipper, so
;        only for manual usage)
; FORCE_LEVEL=1 forces a mesh probe even if MAX_AGE is not reached
[gcode_macro LEVEL_BED_ADVANCED]
description: Levels the bed if the last leveling was MAX_AGE runs ago. Force leveling by setting FORCE
variable_save_at_end: 0
gcode:
  {% set max_age = params.MAX_AGE|default(10)|int %}
  {% set force_level = params.FORCE|default(0)|int %}
  {% set save = params.SAVE|default(0)|int %}

  ; load level_age from stored variables
  {% set svv = printer.save_variables.variables %}
  {% if "level_age" not in svv %} ; first run
    SAVE_VARIABLE VARIABLE=level_age VALUE={max_age}
    {% set level_age = 1 %}
  {% else %} ; load level_age and increment
    {% set level_age = svv.level_age %}
    SAVE_VARIABLE VARIABLE=level_age VALUE={level_age|int + 1}
  {% endif %}
  {action_respond_info("Bed mesh age is " + level_age|string) + "."}

  ; Level eventually
  {% if force_level or (level_age >= max_age|int) %}
    {action_respond_info("Bed mesh exceeded max age. Leveling...")}

    ; homing if not homed yet
    {% if 'xy' not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

    BED_MESH_CALIBRATE
    {% if save %}
      SAVE_VARIABLE VARIABLE=level_age VALUE=1 ; reset counter
      SAVE_CONFIG
    {% else %}
      SET_GCODE_VARIABLE MACRO=LEVEL_BED_ADVANCED VARIABLE=save_at_end VALUE=1
    {% endif %}
  {% else %}
    {action_respond_info("Loading old bed mesh.")}
    BED_MESH_PROFILE LOAD=default
  {% endif %}

# runs SAVE_CONFIG if the g-code variable was set in start gcode
[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro LEVEL_BED_ADVANCED"].save_at_end == 1 %}
  {action_respond_info("Saving was requested - saving and restarting now.")}
  SAVE_VARIABLE VARIABLE=level_age VALUE=1
  SAVE_CONFIG
  {% endif %}

[printer]
kinematics: none
max_velocity: 1000
max_accel: 3500
max_accel_to_decel: 3500
square_corner_velocity = 5.0

[stepper_x]
step_pin: PD7
dir_pin: PC5
enable_pin: !PD6
microsteps: 16
rotation_distance: 32
endstop_pin: ^!PC2
position_endstop: -45
position_max: 220
position_min: -61.6
homing_speed: 30

[stepper_y]
step_pin: PC6
dir_pin: PC7
enable_pin: !PD6
microsteps: 16
rotation_distance: 32
endstop_pin: ^!PC3
position_endstop: -17
position_min: -17
position_max: 220
homing_speed: 20

[stepper_z]
step_pin: PB3
dir_pin: !PB2
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
#endstop_pin: ^!PC4
#position_endstop: -1.65
#position_min: -2.50
position_max: 240
homing_speed: 5
endstop_pin: probe:z_virtual_endstop
position_min: -2 # The Z carriage may need to travel below the Z=0
                 # homing point if the bed has a significant tilt.

[extruder]
step_pin: PB1
dir_pin: PB0
enable_pin: !PD6
microsteps: 16
rotation_distance: 33.600
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD5
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA7
#control: pid
#pid_Kp: 2.151492
#pid_Ki: 0.633897
#pid_Kd: 230.042965
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PD4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA6
#control: watermark
min_temp: 0
max_temp: 130

[fan]
pin: PB4

#[mcu]
#serial: /dev/ttyUSB0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1000
max_z_velocity: 20
max_z_accel: 100

#[display]
#lcd_type: hd44780
#rs_pin: PA3
#e_pin: PA2
#d4_pin: PD2
#d5_pin: PD3
#d6_pin: PC0
#d7_pin: PC1
#up_pin: PA1
#analog_range_up_pin: 9000, 13000
#down_pin: PA1
#analog_range_down_pin: 800, 1300
#click_pin: PA1
#analog_range_click_pin: 2000, 2500
#back_pin: PA1
#analog_range_back_pin: 4500, 5000

[input_shaper]
shaper_freq_x: 31.915  # frequency for the X mark of the test model
shaper_freq_y: 30.488  # frequency for the Y mark of the test model
shaper_type: mzv

[bltouch]
#z_offset: 0
x_offset: 61.6
y_offset: -2.5
sensor_pin: ^PC4
control_pin: PA4

[bed_mesh]
speed: 50
horizontal_move_z: 10
mesh_min: 17, 0
mesh_max: 185, 185
probe_count: 4, 4
algorithm: lagrange
#bicubic_tension: 0.4
fade_start: 2
fade_end: 10

[homing_override]
set_position_z: 0
axes: xyz
gcode:
    G90
    G1 Z5 F600 ; Lift Z 35 mm to make sure probe wont hit bed, it may hit top though
    G28 X0 Y0
    ;G1 X110 - probe_x_offset Y110 - probe_z_offset F3600
    G1 X44 Y110 F3600
    G28 Z0
    G1 Z10

[gcode_macro G29]
gcode:
  G28
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=defalut
  BED_MESH_PROFILE LOAD=default
  G1 X0 Y0 Z5 F4000


#kill_pin: PA1
#analog_range_kill_pin: 400, 600

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.301
#*# pid_ki = 1.017
#*# pid_kd = 183.259
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.174
#*# pid_ki = 1.067
#*# pid_kd = 1220.634
#*#
#*# [bltouch]
#*# z_offset = 1.510
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.102500, -0.150000, -0.150000, -0.172500
#*# 	  -0.100000, -0.100000, -0.130000, -0.192500
#*# 	  -0.040000, -0.085000, -0.115000, -0.167500
#*# 	  -0.042500, -0.067500, -0.115000, -0.177500
#*# tension = 0.4
#*# min_x = 17.0
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 0.0
#*# x_count = 4
#*# max_y = 184.98
#*# mesh_x_pps = 2
#*# max_x = 185.0
#*#
#*# [bed_mesh defalut]
#*# version = 1
#*# points =
#*# 	  -0.102500, -0.150000, -0.150000, -0.172500
#*# 	  -0.100000, -0.100000, -0.130000, -0.192500
#*# 	  -0.040000, -0.085000, -0.115000, -0.167500
#*# 	  -0.042500, -0.067500, -0.115000, -0.177500
#*# tension = 0.4
#*# min_x = 17.0
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 0.0
#*# x_count = 4
#*# max_y = 184.98
#*# mesh_x_pps = 2
#*# max_x = 185.0
